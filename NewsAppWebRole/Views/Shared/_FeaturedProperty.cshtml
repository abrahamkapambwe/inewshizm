<div>
    <ul id="property" class="items" style="clear: right" data-bind='template:{name:"propertyTemplate",foreach:property,beforeRemove:function(elem){$(elem).slideUp();},afterAdd:function(elem){$(elem).hide().slideDown();}}'>
    </ul>
</div>
<script type="text/html" id="taskTemplate">

<li>
<div>
    <div style="float:left">
      <a href="" > <img src=""/></a>
    </div>
    <div style="float:left">
    <div><a href=""><span data-bind=""></span></a></div>
     <div> <span data-bind=""></span></div>
      <div> <span data-bind=""></span></div>
    </div>
</div>
</li>
</script>
<script src="../../Scripts/knockout-2.0.0.js" type="text/javascript"></script>

<script type="text/javascript">
    var mapping = {
        property: {
            key: function (data) {
                return ko.utils.unwrapObservable(data.RowKey);
            },
            create: function (options) {
                var o = {
                    updateCompleteness: function () {
                        $.post('/Api/Complete', {
                                rowKey: ko.utils.unwrapObservable(this.RowKey),
                                completed: ko.utils.unwrapObservable(this.Completed)
                            });
                        return true;
                    },
                    deleteTask: function () {
                        $.post('/Api/Delete', {
                            rowKey: ko.utils.unwrapObservable(this.RowKey),
                        });
                        return false;
                    }
                };
                ko.mapping.fromJS(options.data, {}, o);
                return o;
            }
        }
    };

    var viewModel = ko.mapping.fromJS({
        nextToken: null,
        hasMore: true,
        tokens: [],
        tasks: []
    }, mapping);

    ko.applyBindings(viewModel);

    function refresh() {
        $.post('/Api/Property', { token: viewModel.tokens()[0] },
            function (data) {
                ko.mapping.updateFromJS(viewModel, data);
                $('li').hover(function () {
                        $(this).find('.hiddenButton').show();
                    },
                    function () {
                        $(this).find('.hiddenButton').hide();
                    });
            });
    }

    var interval = null;

    
        refresh();
        interval = window.setInterval(refresh, 500);
    });
</script>
